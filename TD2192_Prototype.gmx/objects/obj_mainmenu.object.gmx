<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard register
keyboard_register(id)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enum
enum MAIN
{
    start,
    save,
    load,
    next,
    help,
    story,
    about,
    order,
    quit    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initial Vars
select_state=MAIN.start
select_alpha=1
select_option = -1

fade_alpha=1
fade_out = false
fade_in = true 

/* Hardcoded option y-positions */
select_box_top[MAIN.start]=30
select_box_top[MAIN.save]=50
select_box_top[MAIN.load]=60
select_box_top[MAIN.next]=80
select_box_top[MAIN.help]=100
select_box_top[MAIN.story]=110
select_box_top[MAIN.about]=120
select_box_top[MAIN.order]=140
select_box_top[MAIN.quit]=160


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unregister
keyboard_deregister(id)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Process Commands
if !ds_stack_empty(command_stack)
{
    var cmd = ds_stack_pop(command_stack);
    
    if is_main_active() /* Not blocked by a child object */
    {   
        switch cmd
        {
            case "push_up":
            {
                select_state-=1
                
                if select_state &lt; MAIN.start
                    select_state=MAIN.quit
                    
                if select_box_valid[select_state] == false
                    select_state-=1
                        
                select_alpha=0
            }; break;
            
            case "push_down":
            {
                select_state+=1
                
                if select_state &gt; MAIN.quit
                    select_state=MAIN.start
                
                if select_box_valid[select_state] == false
                    select_state+=1
                        
                select_alpha=0
            }; break;
            
            case "enter": /* execute menu selection */
            {
                select_option = select_state
                
                switch select_option
                {
                    case MAIN.start: 
                    {
                        if gamedata.current_mission &gt; 0 
                            create_popup(2)
                        else
                            fade_out = true
                    } break;
                    case MAIN.save: fade_out = true; break;
                    case MAIN.load: fade_out = true; break;
                    case MAIN.next: fade_out = true; break;
                    case MAIN.help: break;
                    case MAIN.story: break;
                    case MAIN.about: break;
                    case MAIN.order: break;
                    case MAIN.quit: create_popup(1); break;
                }
            }; break
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fading Animations

//Menu Selection Fading
if select_alpha &lt; 1 then
    select_alpha+=0.05
    
//Screen fading Layer
if fade_in == true
    fade_alpha-=0.04
    
if fade_out == true
    fade_alpha+=0.03

if fade_alpha &lt; 0
{
    fade_alpha = 0
    fade_in = false
}

//fade outs lead to next scene
if fade_alpha &gt; 1
{
    fade_alpha = 1
    fade_out = false
    
    //next screen
    switch select_option
    {
        case MAIN.start: 
        {
            gamedata.current_mission = 1
            room_goto(rm_brief)
        } break;
        case MAIN.next: 
        {
            gamedata.current_mission+=1
            room_goto(rm_brief)
        } break;
        case MAIN.save: 
        {
            var inst = instance_create(0,0,obj_loadsave);
            inst.mode = 1
            visible = false
        }
        case MAIN.load: 
        {
            var inst = instance_create(0,0,obj_loadsave);
            inst.mode = 2
            visible = false;
        } break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set references
gamedata = instance_find(obj_currentgame,0)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set menu flags

/* Initial flags - No current game active*/
select_box_valid[MAIN.start]=true
select_box_valid[MAIN.save]=false
select_box_valid[MAIN.load]=true
select_box_valid[MAIN.next]=false
select_box_valid[MAIN.help]=true
select_box_valid[MAIN.story]=true
select_box_valid[MAIN.about]=true
select_box_valid[MAIN.order]=true
select_box_valid[MAIN.quit]=true

/* Menu state if a game is in progress */
if gamedata.current_mission &gt; 0
{
    select_box_valid[MAIN.next]=true
    select_box_valid[MAIN.save]=true
    select_state = MAIN.next //Add later
}    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Menu

/* Draw all background menu rectangles */
draw_set_alpha(1)
draw_set_halign(fa_left)
draw_set_color(make_color_rgb(64,0,0))
for (var i=MAIN.start;i&lt;=MAIN.quit;i++)
{
    if select_box_valid[i] == true
       draw_rectangle(0,select_box_top[i],view_wview[0],select_box_top[i]+10,false)
}

/* Draw select rectangle */
draw_set_color(c_red)
draw_set_alpha(select_alpha)
draw_rectangle(0,select_box_top[select_state],view_wview[0],select_box_top[select_state]+10,false)

/* Draw Menu Sprite */
draw_sprite_part_ext(MEN,0,0,50,320,200,0,0,1,1,c_white,1)

/* Draw fade effect */
if (fade_in || fade_out)
{
    draw_set_alpha(fade_alpha)
    draw_set_color(c_black)
    draw_rectangle(0,0,room_width,room_height,false)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
