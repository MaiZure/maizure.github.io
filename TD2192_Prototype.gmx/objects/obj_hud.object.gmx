<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Vars

fade_out = false
bg_alpha = 0

/* GUI display helpers */
scale = view_hport[0]/view_hview[0]
y_bottom = display_get_gui_height()

/* Weapon statistics */
shield_count = 0
armor_count = 0
current_weapon = WEAPON.gun_normal
missile_color = c_red

/* Targets box widget */
box_color[0]=c_black
box_color[1]=c_black
box_color[2]=c_black
box_color[3]=c_black
box_color[4]=c_black
box_color[5]=c_black
box_color[6]=c_black
box_color[7]=c_black

/* Mission Ticker */
ticker = ""
message_banner = ""
message = ""
ticker_timer = 0

/* Minimap structures */
minimap_surface = surface_create(201,201)
minimap_overlay = surface_create(201,201)
minimap_create = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free data structures
surface_free(minimap_surface)
surface_free(minimap_overlay)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get HUD Data

/* Reset Shields &amp; Armor of player */
shield_count = 0
armor_count = 0
missile_count = 0

if instance_exists(player)
{
    shield_count = floor((player.shields/player.shields_max)*12)
    armor_count = floor((player.armor/player.armor_max)*12)
    missile_count = player.missile_count
    current_weapon = player.weapon[player.active_weapon]
    
    /* Target Box Color Update */
    for (var i=0;i&lt;8;i++)
    {
        if player.targets_box[i] &gt; 0 then
            box_color[i] = make_color_rgb(min((player.targets_box[i] mod 32)*75,255),0,floor(player.targets_box[i]/32)*255)
        else
            box_color[i]=c_black
    }
    
    /* Missile Color */
    if current_weapon == WEAPON.missile_strong || current_weapon == WEAPON.missile_normal || current_weapon == WEAPON.missile_weak
        missile_color = make_color_rgb(255-player.fire_delay*12,0,0)
    else
        missile_color = c_red

    if missile_count == 0 then
        missile_color = c_black
}

/* Minimap Ranges */
map_min_x = camera.map_x-10
map_max_x = camera.map_x+10
map_min_y = camera.map_y-10
map_max_y = camera.map_y+10
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Message Banner
draw_set_font(global.little_font)
if ticker_timer &gt; 0
    ticker_timer--

//Scroll message
if string_length(message_banner) &gt; 0 &amp;&amp; ticker_timer &lt; 1
{
    message_banner = string_copy(message_banner,2,string_length(message_banner)-1)
    ticker = string_copy(message_banner,1,12)
    ticker_timer = 10
}

//Init new message
if string_length(message) &gt; 0 &amp;&amp; string_length(message_banner) &lt; 5
{
    message_banner = string_upper("            "+string(message))
    message = ""
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade out
if fade_out = true 
{
    bg_alpha+=0.05
    if bg_alpha &gt; 1
    {
        if mission.mission_dead
        {       
            room_goto(rm_mainmenu)
        }
        else
            room_goto(rm_debrief)      
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ensure destruction
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set references
gamedata = instance_find(obj_currentgame,0)
mission = instance_find(obj_hq,0)
map = instance_find(obj_map,0)
player = find_player_ship()
camera = instance_find(obj_camera,0)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug ticker
//hud_message("This is a ticker test")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create minimap
if minimap_create
{
    surface_set_target(minimap_surface)
    var xpos, ypos, img, tile;
    draw_set_alpha(1)
    for (ypos=0;ypos&lt;201;ypos++)
    {
        for (xpos=0;xpos&lt;201;xpos++)
        {
            var col;
            img = ds_grid_get(map.collision_map,xpos,ypos)
            tile = ds_grid_get(map.mapdata,xpos,ypos)
            if img = 0 then col=c_dkgray
            if img = 1 then col=c_ltgray
            if tile == $0F || tile == $10 then col = make_color_rgb(174,124,88)
            draw_sprite_ext(spr_debug,0,xpos,ypos,1,1,0,col,1)
            //draw_set_color(col)
            //draw_point(xpos,ypos)
        }
    }
    surface_reset_target()
    minimap_create = false
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset overlay
surface_set_target(minimap_overlay)
draw_clear_alpha(c_white,0)
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Render Hud
///REFACTOR THIS TO TOP-LEFT OF THE SPRITE BASIS (NOT Y_BOTTOM)

/* Missile backlight */
draw_set_color(missile_color)
draw_rectangle(114*scale,y_bottom-24*scale,134*scale,y_bottom-10*scale,false)

/* Main Hud */
draw_sprite_ext(HUD,0,0,display_get_gui_height(),scale,scale,0,c_white,1)


/* Weapon Overlay */
if current_weapon != WEAPON.none
    draw_sprite_ext(WEA,current_weapon-1,179*scale,y_bottom-24*scale,scale,scale,0,c_white,1)

/* Missile Count Overlay */
for(i=0;i&lt;missile_count;i++)
{
    if i mod 2 == 0
        draw_set_color(c_white)
    else
        draw_set_color(c_red)
        
    draw_line_width(100*scale,y_bottom-2*scale-scale*i,104*scale,y_bottom-2*scale-scale*i,scale)
}

/* Shields &amp; Armor Overlay */
for(var i=0; i&lt;13;i++)
{
    col = c_green;
    if i &lt; 6 then col = c_yellow
    if i &lt; 3 then col = c_red
    if shield_count &gt;= i
        draw_sprite_ext(spr_bar,0,7*scale+(i*4*scale),y_bottom-20*scale,scale,scale,0,col,1)
    if armor_count &gt;= i
        draw_sprite_ext(spr_bar,0,7*scale+(i*4*scale),y_bottom-8*scale,scale,scale,0,col,1)
}

/*Draw Minimap*/
draw_surface_part_ext(minimap_surface,camera.map_x-10,camera.map_y-10,20,20,148*scale,y_bottom-25*scale,scale,scale,c_white,1)
draw_surface_part_ext(minimap_overlay,camera.map_x-10,camera.map_y-10,20,20,148*scale,y_bottom-25*scale,scale,scale,c_white,1)


/* Draw Targets Box */
//start middle right CCW
draw_set_color(box_color[0])
draw_rectangle(86*scale,y_bottom-18*scale,91*scale,y_bottom-13*scale,false)
draw_set_color(box_color[1])
draw_rectangle(85*scale,y_bottom-23*scale,91*scale,y_bottom-17*scale,false)
draw_set_color(box_color[2])
draw_rectangle(80*scale,y_bottom-23*scale,85*scale,y_bottom-18*scale,false)
draw_set_color(box_color[3])
draw_rectangle(74*scale,y_bottom-23*scale,80*scale,y_bottom-17*scale,false)
draw_set_color(box_color[4])
draw_rectangle(74*scale,y_bottom-17*scale,79*scale,y_bottom-13*scale,false)
draw_set_color(box_color[5])
draw_rectangle(74*scale,y_bottom-13*scale,80*scale,y_bottom-7*scale,false)
draw_set_color(box_color[6])
draw_rectangle(80*scale,y_bottom-12*scale,86*scale,y_bottom-7*scale,false)
draw_set_color(box_color[7])
draw_rectangle(85*scale,y_bottom-13*scale,91*scale,y_bottom-7*scale,false)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Message Banner
draw_set_font(global.little_font)
draw_set_color(c_black)
draw_set_halign(fa_left)
draw_text_transformed(255*scale,y_bottom-17*scale,ticker,scale,scale,0)
draw_set_color(make_color_rgb(255,225,255))
draw_text_transformed(256*scale,y_bottom-18*scale,ticker,scale,scale,0)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade Out
if fade_out
{
    //Black backdrop
    draw_set_alpha(bg_alpha)
    draw_set_color(c_black)
    draw_rectangle(0,0,display_get_gui_width(),display_get_gui_height(),false)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw test night-time &amp; infrared overlay
/*
draw_set_blend_mode_ext(bm_dest_color, bm_zero)
draw_set_color(c_navy)
draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+view_wview[0]/2,view_yview[0]+view_hview[0],false)
draw_set_color(c_red)
draw_rectangle(view_xview[0]+view_wview[0]/2,view_yview[0],view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],false)
draw_set_blend_mode(bm_normal)
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
